name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/ 2>/dev/null || true
        cp package*.json deploy/
        cp next.config.js deploy/
        
    - name: Deploy to DigitalOcean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || 22 }}
        script: |
          # Navigate to app directory
          cd /var/www/lakegn
          
          # Stop PM2 process
          pm2 stop lakegn-app || true
          
          # Backup current deployment
          if [ -d "current" ]; then
            rm -rf backup
            mv current backup
          fi
          
          # Create new deployment directory
          mkdir -p current
          
    - name: Upload files to DigitalOcean
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || 22 }}
        source: "deploy/*"
        target: "/var/www/lakegn/current/"
        strip_components: 1
        
    - name: Start application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || 22 }}
        script: |
          cd /var/www/lakegn/current
          
          # Install production dependencies
          npm ci --only=production
          
          # Create environment file
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env.local
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env.local
          
          # Start with PM2
          pm2 start ecosystem.config.js --env production || pm2 restart lakegn-app
          
          # Save PM2 configuration
          pm2 save
          
          echo "âœ… Deployment completed successfully"